#!/usr/bin/env perl
use warnings;
use strict;
use feature 'say';

#------------------------------------------------------------------------------
use File::Basename qw(basename);
our $PROGNAME = basename($0);

#------------------------------------------------------------------------------
use open IO => qw(:locale);
use Encode::Locale;
use Encode qw(decode);
BEGIN {
    @ARGV = map { decode('locale', $_, Encode::FB_CROAK) } @ARGV;
}

#------------------------------------------------------------------------------
our $singleQuote = 0;

#------------------------------------------------------------------------------
use Getopt::Long;
Getopt::Long::Configure('bundling', 'gnu_compat', 'no_ignore_case');
Getopt::Long::GetOptions(
    's|single-quote' => sub { $singleQuote = 1; },
    'd|double-quote' => sub { $singleQuote = 0; },
    'help'           => sub { usage(); exit(0); },
) or die("Type '$PROGNAME --help' for help.\n");

sub usage { print(<<"END"); }
usage:
    $PROGNAME [<option> ...] [<filename> ...]
options:
    -s, --single-quote
    -d, --double-quote
        --help
END

###############################################################################

while (<>) {
    s{\R\z}{};
    if ($singleQuote) {
        say pythonEscapeSingleQuote($_);
    } else {
        say pythonEscapeDoubleQuote($_);
    }
}

sub pythonEscapeSingleQuote {
    my ($string) = @_;
    return pythonEscape($string, singleQuote => 1);
}

sub pythonEscapeDoubleQuote {
    my ($string) = @_;
    return pythonEscape($string, singleQuote => 0);
}

sub pythonEscape {
    my ($string, %options) = @_;
    my $prefix = '';
    $string =~ s{\\}{\\\\}g;
    if ($options{singleQuote}) {
        $string =~ s{\'}{\\'}g;
    } else {
        $string =~ s{\"}{\\"}g;
    }
    $string =~ s{\x07}{\\a}g;     # bell
    $string =~ s{\x08}{\\b}g;     # backspace
    $string =~ s{\x09}{\\t}g;     # tab
    $string =~ s{\x0a}{\\n}g;     # line feed
    $string =~ s{\x0b}{\\v}g;     # vertical tab
    $string =~ s{\x0c}{\\f}g;     # form feed
    $string =~ s{\x0d}{\\r}g;     # carriage return
    $string =~ s{[\x00-\x1f\x7f-\xff]}
                {"\\x" . sprintf('%02x', ord($&))}ge;
    if ($string =~ m{[\x{0100}-\x{10ffff}]}) {
        $prefix = 'u';
    }
    $string =~ s{[\x{0100}-\x{ffff}]}
                {"\\u" . sprintf('%04x', ord($&))}ge;
    $string =~ s{[\x{10000}-\x{10ffff}]}
                {"\\U" . sprintf('%08x', ord($&))}ge;
    if ($options{singleQuote}) {
        return "'" . $string . "'";
    }
    return $prefix . '"' . $string . '"';
}
