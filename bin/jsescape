#!/usr/bin/env perl
use warnings;
use strict;
use open IO => qw(:locale);

our $slurp = 0;
our $non_ascii_printable_only = 0;
our $quote = 2;

use Getopt::Long;
Getopt::Long::Configure('gnu_getopt');
Getopt::Long::GetOptions(
    's|single-quote'             => sub { $quote = 1; },
    'd|double-quote'             => sub { $quote = 2; },
    'z|slurp'                    => \$slurp,
    'N|non-ascii-printable-only' => \$non_ascii_printable_only,
    'help|?'                     => sub { usage(); exit(0); },
) or die("Type 'jsescape --help' for help.\n");

sub usage { print(<<"END"); }
jsescape [<option> ...] [<filename> ...]
-z, --slurp
-N, --non-ascii-printable-only
-s, --single-quote
-d, --double-quote
-?, --help
END

$/ = undef if $slurp;
while (<>) {
    s{\R\z}{} if !$slurp;
    print js_escape($_);
    print "\n" if !$slurp;
}

sub js_escape {
    my ($string) = @_;
    if (!$non_ascii_printable_only) {
        $string =~ s{\\}{\\\\}g;
        $string =~ s{\"}{\\"}g if $quote == 2;
        $string =~ s{\'}{\\'}g if $quote == 1;
    }
    $string =~ s{\x08}{\\b}g;   # backspace
    $string =~ s{\x09}{\\t}g;   # tab
    $string =~ s{\x0a}{\\n}g;   # line feed
    $string =~ s{\x0c}{\\f}g;   # form feed
    $string =~ s{\x0d}{\\r}g;   # carriage return
    $string =~ s{[\x00-\x1f\x7f-\x{ffff}]}{"\\u" . sprintf('%04x', ord($&))}ge;
    $string =~ s{[\x{10000}-\x{10ffff}]}{js_escape_surrogate_pair($&)}ge;
    return '"' . $string . '"';
}

sub js_escape_surrogate_pair {
    my ($char) = @_;
    my $codepoint = ord($char);
    return if $codepoint < 0x10000;
    return if $codepoint > 0x10ffff;
    my $highSurrogate = 0xd800 + int(($codepoint - 0x10000) / 1024);
    my $lowSurrogate  = 0xdc00 + ($codepoint - 0x10000) % 1024;
    return sprintf('\\u%04x\\u%04x', $highSurrogate, $lowSurrogate);
}
