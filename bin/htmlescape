#!/usr/bin/env perl
use warnings;
use strict;
use feature 'say';

#------------------------------------------------------------------------------
use File::Basename qw(basename);
our $PROGNAME = basename($0);

#------------------------------------------------------------------------------
use open IO => qw(:locale);
use Encode::Locale;
use Encode qw(decode);
BEGIN {
    @ARGV = map { decode('locale', $_, Encode::FB_CROAK) } @ARGV;
}

#------------------------------------------------------------------------------
our $nonAsciiOnly = 0;

#------------------------------------------------------------------------------
use Getopt::Long;
Getopt::Long::Configure('bundling', 'gnu_compat', 'no_ignore_case');
Getopt::Long::GetOptions(
    'N|non-ascii-only' => \$nonAsciiOnly,
    'help' => sub { usage(); exit(0); },
) or die("Type '$PROGNAME --help' for help.\n");

sub usage { print(<<"END"); }
usage:
    $PROGNAME [<option> ...] [<filename> ...]
options:
    -N, --non-ascii-only
        --help
END

###############################################################################

use HTML::Entities qw(encode_entities);

while (<>) {
    s{\R\z}{};
    if ($nonAsciiOnly) {
        say encodeEntitiesNonAsciiOnly($_);
    } else {
        say encode_entities($_);
    }
}

sub encodeEntitiesNonAsciiOnly {
    my ($string) = @_;
    $string =~ s{[^\t\r\n -~]+}{encode_entities($&)}ge;
    return $string;
}
