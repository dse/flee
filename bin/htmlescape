#!/usr/bin/env perl
use warnings;
use strict;
use open IO => qw(:locale);
use HTML::Entities qw(encode_entities);
use Getopt::Long;

our $decode_ascii;
our $decode_non_ascii;

Getopt::Long::Configure('gnu_getopt');
Getopt::Long::GetOptions(
    'a|ascii-only' => \$decode_ascii,
    'A|non-ascii-only' => \$decode_non_ascii,
) or die("Type 'htmlescape --help' for help.\n");

sub usage { print(<<"END"); }
usage: htmlescape [<option> ...] [<filename> ...]
options:
  -A, --non-ascii-only
  -a, --ascii-only
  -?, --help
END

if (!defined $decode_ascii && !defined $decode_non_ascii) {
    $decode_ascii = 1;
    $decode_non_ascii = 1;
}

my $unsafe_regex;
if ($decode_non_ascii && $decode_ascii) {
    $unsafe_regex = undef;
} elsif ($decode_non_ascii) {
    $unsafe_regex = '^\x20-\x77'
} elsif ($decode_ascii) {
    $unsafe_regex = '\x20-\x77'
}

while (<>) {
    s{\R\z}{};
    if (defined $unsafe_regex) {
        $_ = encode_entities($_, $unsafe_regex);
    } else {
        $_ = encode_entities($_);
    }
    print("$_\n");
}

sub is_ascii {
    my ($ord) = @_;
    return $ord >= 32 && $ord <= 126;
}

sub is_non_ascii {
    my ($ord) = @_;
    return $ord < 32 || $ord > 126;
}
